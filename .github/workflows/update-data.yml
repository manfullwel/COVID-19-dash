name: Update COVID-19 Data

on:
  schedule:
    - cron: '0 */12 * * *'  # Executa a cada 12 horas
  workflow_dispatch:  # Permite execução manual

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests numpy
    
    - name: Download and process data
      run: |
        python scripts/update_data.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        API_TOKEN: ${{ secrets.API_TOKEN }}  # Token seguro para APIs externas
    
    - name: Commit and push if changed
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add data/
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update COVID-19 data [skip ci]" && git push)

  test:
    needs: update-data
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run tests
      run: |
        pytest tests/
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Deploy to production
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "Deploying to production..."
        # Adicione seus comandos de deploy aqui
